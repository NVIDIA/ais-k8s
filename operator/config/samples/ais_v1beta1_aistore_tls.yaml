---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: self-signed-cert
  namespace: ais-operator-system
spec:
  secretName: ais-tls-certs
  duration: 8760h  # 1 year
  renewBefore: 720h  # 30 days
  dnsNames:
    - aistore-sample-proxy  # Add your domain name(s) as SANs
  isCA: true
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 4096
  subject:
    organizations:
      - NVIDIA
  issuerRef:
    name: selfsigned-issuer
    kind: ClusterIssuer
---
apiVersion: ais.nvidia.com/v1beta1
kind: AIStore
metadata:
  name: aistore-sample
  namespace: ais-operator-system
spec:
  # Add fields here
  size: 1
  proxySpec:
    servicePort: 51080
    portPublic: 51080
    portIntraControl: 51081
    portIntraData: 51082

  targetSpec:
    servicePort: 51081
    portPublic: 51081
    portIntraControl: 51082
    portIntraData: 51083

    mounts:
      - path: "/ais1"
        size: 10Gi

    # In certain environments (e.g. minikube), storage volumes attached to AIS targets may not have associated block devices.
    # Alternatively, AIS targets may "see" multiple mountpath directories sharing a single given block device.
    # In both of those cases, set allowSharedNoDisks = true (but note that this setting is **not recommended** for production).
    allowSharedNoDisks: false

  configToUpdate:
    net:
      http:
        server_crt: "/var/certs/tls.crt"
        server_key: "/var/certs/tls.key"
        use_https: true
        skip_verify: true # if you are using self signed certs

  nodeImage: "aistorage/aisnode:v3.21"
  initImage: "aistorage/ais-init:latest"
  hostpathPrefix: "/etc/ais"

  tlsSecretName: "ais-tls-certs"

  # To be able to access the AIS deployment outside kubernetes cluster, set:
  # enableExternalLB: true
  # NOTE: For external access to work, the kubernetes cluster should have the capabilitly to create LoadBalancer services with valid external IP.
  # For local testing with `minikube` run `minikube tunnel` in background for emulation. ref: https://minikube.sigs.k8s.io/docs/commands/tunnel/
  enableExternalLB: false
---
